plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'kotlin-platform-android'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.rivaldy.id.mvvmtemplateapp"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "BASE_URL", '"https://api.themoviedb.org/3/"')
        buildConfigField("String", "API_KEY", '"8b904530a7aced766995fa063ed27355"')
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"

    //testing
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_test_version"
    androidTestImplementation "androidx.test:runner:$androidX_test_version"
    androidTestImplementation "androidx.test:rules:$androidX_test_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_test_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_test_version"
    // For Robolectric tests.
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    // ...with Kotlin.
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    //mockito
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation "androidx.arch.core:core-testing:$android_core_test_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
    implementation "androidx.test.espresso:espresso-idling-resource:$idle_resource_version"

    // UI
    implementation "com.google.android.material:material:$material_version"
    implementation "com.squareup.picasso:picasso:$picasso_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$ui_ktx_version"
    implementation "androidx.navigation:navigation-ui-ktx:$ui_ktx_version"

    // REMOTE
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp3_version"

    // LOCAL STORAGE
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version" // optional - Kotlin Extensions and Coroutines support for Room

    // Coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlin_coroutines_version"

    // Loading Progress - SpinKit
    implementation "com.github.ybq:Android-SpinKit:$spin_kit_version"

    // Fresco
    implementation "com.facebook.fresco:fresco:$fresco_version"

    // Datastore Typed
    implementation "androidx.datastore:datastore-preferences:$data_store_version"
    // Datastore Preferences
    implementation "androidx.datastore:datastore:1.0.0"

    // Core KTX
    implementation "androidx.core:core-ktx:$core_ktx_version"
    // Lifecycle KTX
    implementation "android.arch.lifecycle:extensions:$lifecycle_extensions_version"
    // Activity & Fragment KTX
    implementation "androidx.activity:activity-ktx:$activity_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    // DI - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // ViewModel with Hilt
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_viewmodels"
}